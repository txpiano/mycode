void Insertsort(int* a,int n)
{
    
    for (int j = 0; j < n - 1; j++)
    {
        int end = j;
        int x = a[end + 1];

        while (end >= 0)
        {
            if ( x < a[end])
            {
                a[end + 1] = a[end];
                end--;
            }
            else
            {
                break;
            }

        }

        a[end + 1] = x;
    }



}
void Shellsort(int* a, int n)
{
    
    int gap = 5;
    while (gap > 1)
    {
        gap = gap / 3;

        for (int j = 0; j < n - gap; j++)
        {
            int end = j;
            int x = a[end + 1];

            while (end >= 0)
            {
                if (x < a[end])
                {
                    a[end + 1] = a[end];
                    end--;
                }
                else
                {
                    break;
                }

            }

            a[end + 1] = x;
        }
    }

    
}

void Shellsort1(int* a, int n)
{
    int gap = 3;

    while (gap > 1)
    {
        gap = gap / 3 + 1;

        for (int i = 0; i < n - gap; i++)
        {
            int end = i;
            int x = a[end + gap];

            while (end >= 0)
            {
                if (a[end] > x)
                {
                    a[end + gap] = a[end];
                    end-=gap;
                }
                else
                {
                    break;
                }
            }

            a[end + gap] = x;


        }

            
    }

}
int main()
{

    int arr[] = { 5,6,1,2,3,7,9,0 };
    int size = sizeof(arr) / sizeof(arr[0]);
    //Insertsort(arr,size);
    Shellsort1(arr, size);


    return 0;
}
